// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityCore.Models;

namespace UniversityCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190527071154_hasaneenh")]
    partial class hasaneenh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityCore.Entities.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<int?>("UniversityId");

                    b.HasKey("CollegeId")
                        .HasName("PK_College");

                    b.HasIndex("UniversityId");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("UniversityCore.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<int?>("UniversityId");

                    b.HasKey("DepartmentId")
                        .HasName("PK_Department");

                    b.HasIndex("CollegeId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("UniversityCore.Entities.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Avarge");

                    b.Property<string>("FirstArticle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Firstdegree");

                    b.Property<string>("FourArticle");

                    b.Property<int>("FourDegree");

                    b.Property<string>("SecondeArticle");

                    b.Property<int>("SecondeDegree");

                    b.Property<int>("StudentId");

                    b.Property<string>("ThirdArticle");

                    b.Property<int>("ThirdDegree");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("UniversityCore.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityCore.Entities.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.HasKey("UniversityId")
                        .HasName("PK_University");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("UniversityCore.Entities.College", b =>
                {
                    b.HasOne("UniversityCore.Entities.University", "University")
                        .WithMany("Colleges")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK_College_University")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityCore.Entities.Department", b =>
                {
                    b.HasOne("UniversityCore.Entities.College", "College")
                        .WithMany("Departments")
                        .HasForeignKey("CollegeId")
                        .HasConstraintName("FK_Department_College");

                    b.HasOne("UniversityCore.Entities.University", "University")
                        .WithMany("Departments")
                        .HasForeignKey("UniversityId")
                        .HasConstraintName("FK_Department_University")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityCore.Entities.Grade", b =>
                {
                    b.HasOne("UniversityCore.Entities.Student", "student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
